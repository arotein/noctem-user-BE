global:
  service-name: user-service
  api:
    base-path: /api/${global.service-name}

server:
  port: 0
  servlet:
    encoding:
      charset: UTF-8
      enable: true
      force: true
  shutdown: graceful

spring:
  application:
    name: ${global.service-name}
  main:
    allow-bean-definition-overriding: true
  config:
    import: optional:configserver:http://${CONFIG_SERVER}:8888
  profiles:
    active: ${PROFILE}
  cloud:
    config:
      fail-fast: true # true: config 서버에 연결하지 못하면 앱이 실행되지 않도록 함
    bus:
      enabled: true
      refresh:
        enabled: true
      destination: config-topic
  kafka:
    consumer:
      group-id: userGroup
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  jpa:
    properties:
      hibernate:
        format_sql: true
        query.in_clause_parameter_padding: true
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
  mail:
    host: smtp.gmail.com
    port: 587
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true

management:
  endpoints:
    web:
      base-path: /api/${global.service-name}/actuator
      exposure:
        include: health, refresh, httptrace, busrefresh, prometheus, metrics
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${global.service-name}

logging:
  charset:
    console: UTF-8
    file: UTF-8